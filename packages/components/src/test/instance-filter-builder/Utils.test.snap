// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`createInstanceFilterPropertyInfos creates property infos when fields are in different categories category 1`] = `
Array [
  Object {
    "categoryLabel": "Root Category | Nested Category 1",
    "className": "SchemaName:ClassName",
    "field": Object {
      "category": "nested1",
      "editor": undefined,
      "extendedData": undefined,
      "isReadonly": false,
      "label": "Properties Field",
      "name": "PropertiesField",
      "priority": 0,
      "properties": Array [
        Object {
          "property": Object {
            "classInfo": Object {
              "id": "0x1",
              "label": "Class Label",
              "name": "SchemaName:ClassName",
            },
            "name": "prop1",
            "type": "string",
          },
        },
      ],
      "renderer": undefined,
      "type": Object {
        "typeName": "string",
        "valueFormat": "Primitive",
      },
    },
    "propertyDescription": Object {
      "displayLabel": "Properties Field",
      "name": "root/nested1#PropertiesField",
      "typename": "string",
    },
    "sourceClassId": "0x1",
  },
  Object {
    "categoryLabel": "Root Category | Nested Category 2 | Nested Category 2 1",
    "className": "SchemaName:ClassName",
    "field": Object {
      "category": "nested21",
      "editor": undefined,
      "extendedData": undefined,
      "isReadonly": false,
      "label": "Properties Field",
      "name": "PropertiesField",
      "priority": 0,
      "properties": Array [
        Object {
          "property": Object {
            "classInfo": Object {
              "id": "0x1",
              "label": "Class Label",
              "name": "SchemaName:ClassName",
            },
            "name": "prop2",
            "type": "number",
          },
        },
      ],
      "renderer": undefined,
      "type": Object {
        "typeName": "string",
        "valueFormat": "Primitive",
      },
    },
    "propertyDescription": Object {
      "displayLabel": "Properties Field",
      "name": "root/nested2/nested21#PropertiesField",
      "typename": "string",
    },
    "sourceClassId": "0x1",
  },
]
`;

exports[`createInstanceFilterPropertyInfos creates property infos when fields are in root category 1`] = `
Array [
  Object {
    "categoryLabel": "Root Category",
    "className": "SchemaName:ClassName",
    "field": Object {
      "category": "root",
      "editor": undefined,
      "extendedData": undefined,
      "isReadonly": false,
      "label": "Properties Field",
      "name": "PropertiesField",
      "priority": 0,
      "properties": Array [
        Object {
          "property": Object {
            "classInfo": Object {
              "id": "0x1",
              "label": "Class Label",
              "name": "SchemaName:ClassName",
            },
            "name": "prop1",
            "type": "string",
          },
        },
      ],
      "renderer": undefined,
      "type": Object {
        "typeName": "string",
        "valueFormat": "Primitive",
      },
    },
    "propertyDescription": Object {
      "displayLabel": "Properties Field",
      "name": "root#PropertiesField",
      "typename": "string",
    },
    "sourceClassId": "0x1",
  },
  Object {
    "categoryLabel": "Root Category",
    "className": "SchemaName:ClassName",
    "field": Object {
      "category": "root",
      "editor": undefined,
      "extendedData": undefined,
      "isReadonly": false,
      "label": "Properties Field",
      "name": "PropertiesField",
      "priority": 0,
      "properties": Array [
        Object {
          "property": Object {
            "classInfo": Object {
              "id": "0x1",
              "label": "Class Label",
              "name": "SchemaName:ClassName",
            },
            "name": "prop2",
            "type": "number",
          },
        },
      ],
      "renderer": undefined,
      "type": Object {
        "typeName": "string",
        "valueFormat": "Primitive",
      },
    },
    "propertyDescription": Object {
      "displayLabel": "Properties Field",
      "name": "root#PropertiesField",
      "typename": "string",
    },
    "sourceClassId": "0x1",
  },
]
`;

exports[`createInstanceFilterPropertyInfos creates property infos when property fields are in nested fields 1`] = `
Array [
  Object {
    "categoryLabel": "Root Category",
    "className": "SchemaName:ClassName",
    "field": Object {
      "category": "root",
      "editor": undefined,
      "extendedData": undefined,
      "isReadonly": false,
      "label": "Properties Field",
      "name": "PropertiesField",
      "priority": 0,
      "properties": Array [
        Object {
          "property": Object {
            "classInfo": Object {
              "id": "0x1",
              "label": "Class Label",
              "name": "SchemaName:ClassName",
            },
            "name": "prop1",
            "type": "string",
          },
        },
      ],
      "renderer": undefined,
      "type": Object {
        "typeName": "string",
        "valueFormat": "Primitive",
      },
    },
    "propertyDescription": Object {
      "displayLabel": "Properties Field",
      "name": "root#NestedContentField$PropertiesField",
      "typename": "string",
    },
    "sourceClassId": "0x2",
  },
  Object {
    "categoryLabel": "Root Category",
    "className": "SchemaName:ClassName",
    "field": Object {
      "category": "root",
      "editor": undefined,
      "extendedData": undefined,
      "isReadonly": false,
      "label": "Properties Field",
      "name": "PropertiesField",
      "priority": 0,
      "properties": Array [
        Object {
          "property": Object {
            "classInfo": Object {
              "id": "0x1",
              "label": "Class Label",
              "name": "SchemaName:ClassName",
            },
            "name": "prop2",
            "type": "number",
          },
        },
      ],
      "renderer": undefined,
      "type": Object {
        "typeName": "string",
        "valueFormat": "Primitive",
      },
    },
    "propertyDescription": Object {
      "displayLabel": "Properties Field",
      "name": "root#NestedContentField$PropertiesField",
      "typename": "string",
    },
    "sourceClassId": "0x2",
  },
]
`;
