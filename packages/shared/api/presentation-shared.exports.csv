sep=;
Release Tag;API Item
beta;ArrayElement
beta;ConcatenatedValue = ConcatenatedValuePart[]
beta;ConcatenatedValue
beta;ConcatenatedValuePart = PrimitivePropertyValue | TypedPrimitiveValue | string
beta;ConcatenatedValuePart
beta;createBisInstanceLabelSelectClauseFactory(props: BisInstanceLabelSelectClauseFactoryProps): IInstanceLabelSelectClauseFactory
beta;createCachingECClassHierarchyInspector(props:
beta;createClassBasedInstanceLabelSelectClauseFactory(props: ClassBasedInstanceLabelSelectClauseFactoryProps): IInstanceLabelSelectClauseFactory
beta;createDefaultInstanceLabelSelectClauseFactory(): IInstanceLabelSelectClauseFactory
beta;createDefaultValueFormatter(): IPrimitiveValueFormatter
beta;createMainThreadReleaseOnTimePassedHandler(releaseOnTimePassed?: number): () => Promise
beta;EC
beta;ECClassHierarchyInspector
beta;ECSchemaProvider
beta;ECSqlBinding =
beta;ECSqlQueryDef
beta;ECSqlQueryExecutor
beta;ECSqlQueryReaderOptions
beta;ECSqlQueryRow
beta;formatConcatenatedValue(props:
beta;getClass(schemaProvider: ECSchemaProvider, fullClassName: string): Promise
beta;IInstanceLabelSelectClauseFactory
beta;ILogger
beta;InstanceKey
beta;InstanceKey
beta;IPrimitiveValueFormatter = (value: TypedPrimitiveValue) => Promise
beta;LogFunction = (category: string, message: string) => void
beta;LogLevel = "error" | "warning" | "info" | "trace"
beta;MainThreadBlockHandler
beta;NOOP_LOGGER: ILogger
beta;normalizeFullClassName(fullClassName: string): string
beta;OmitOverUnion
beta;parseFullClassName(fullClassName: string):
beta;parseInstanceLabel(value: string | undefined): ConcatenatedValue | string
beta;PrimitiveValue = Id64String | string | number | boolean | Date | Point2d | Point3d
beta;PrimitiveValue
beta;releaseMainThread(): Promise
beta;trimWhitespace(str: string): string
beta;trimWhitespace(str: string | undefined): string | undefined
beta;TypedPrimitiveValue