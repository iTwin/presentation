sep=;
Release Tag;API Item
beta;createClassBasedHierarchyDefinition(props: ClassBasedHierarchyDefinitionProps): HierarchyDefinition
beta;createHierarchyProvider(props: HierarchyProviderProps): HierarchyProvider
beta;createLimitingECSqlQueryExecutor(baseExecutor: ECSqlQueryExecutor, defaultLimit: number | "unbounded"): LimitingECSqlQueryExecutor
beta;createNodesQueryClauseFactory(props:
beta;DefineCustomNodeChildHierarchyLevelProps = Omit
beta;DefineHierarchyLevelProps
beta;DefineInstanceNodeChildHierarchyLevelProps = Omit
beta;DefineRootHierarchyLevelProps = Omit
beta;GetHierarchyNodesProps
beta;getLogger(): ILogger
beta;GroupingHierarchyNode 
beta;GroupingNodeKey = ClassGroupingNodeKey | LabelGroupingNodeKey | PropertyGroupingNodeKey
beta;HierarchyDefinition
beta;HierarchyLevelDefinition = HierarchyNodesDefinition[]
beta;HierarchyNode = NonGroupingHierarchyNode | GroupingHierarchyNode
beta;HierarchyNode
beta;HierarchyNodeIdentifier = InstanceKey |
beta;HierarchyNodeIdentifier
beta;HierarchyNodeIdentifiersPath = HierarchyNodeIdentifier[]
beta;HierarchyNodeKey = StandardHierarchyNodeKey | string
beta;HierarchyNodeKey
beta;HierarchyNodesDefinition = CustomHierarchyNodeDefinition | InstanceNodesQueryDefinition
beta;HierarchyNodesDefinition
beta;HierarchyProvider
beta;InstancesNodeKey
beta;LimitingECSqlQueryExecutor
beta;NodeParser = (row:
beta;NodePostProcessor = (node: ProcessedHierarchyNode) => Promise
beta;NodePreProcessor = 
beta;NodeSelectClauseColumnNames
beta;NodesQueryClauseFactory
beta;NonGroupingHierarchyNode 
beta;ParsedHierarchyNode
beta;ProcessedHierarchyNode = ProcessedCustomHierarchyNode | ProcessedInstanceHierarchyNode | ProcessedGroupingHierarchyNode
beta;RowsLimitExceededError 
beta;setLogger(logger: ILogger | undefined): void