// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PropertyDataProvider getData with flat categories handles records with no values 1`] = `
Object {
  "categories": Array [
    Object {
      "expand": true,
      "label": "sexy Automotive pink",
      "name": "white",
    },
  ],
  "description": "Guadeloupe",
  "label": PropertyRecord {
    "property": Object {
      "displayLabel": "Label",
      "name": "label",
      "typename": "string",
    },
    "value": Object {
      "displayValue": "Executive",
      "value": "Executive",
      "valueFormat": 0,
    },
  },
  "records": Object {
    "white": Array [
      PropertyRecord {
        "property": Object {
          "displayLabel": "EXE gold niches",
          "editor": Object {
            "name": "virtual",
            "params": Array [],
          },
          "name": "Generic",
          "typename": "binary",
        },
        "value": Object {
          "displayValue": "",
          "value": undefined,
          "valueFormat": 0,
        },
      },
    ],
  },
  "reusePropertyDataState": true,
}
`;

exports[`PropertyDataProvider getData with flat categories nested content handling removes nested content record when the nested field is categorized but there's no content 1`] = `
Object {
  "categories": Array [],
  "description": undefined,
  "label": PropertyRecord {
    "property": Object {
      "displayLabel": "Label",
      "name": "label",
      "typename": "string",
    },
    "value": Object {
      "displayValue": "Cape ADP digital",
      "value": "Cape ADP digital",
      "valueFormat": 0,
    },
  },
  "records": Object {},
  "reusePropertyDataState": true,
}
`;

exports[`PropertyDataProvider getData with flat categories nested content handling removes nested content record when the only nested field is moved into a separate category and nested content record is the only record in category 1`] = `
Object {
  "categories": Array [
    Object {
      "expand": false,
      "label": "nested-1-1",
      "name": "nested-1-1",
    },
    Object {
      "expand": false,
      "label": "top-1",
      "name": "top-1",
    },
  ],
  "description": undefined,
  "label": PropertyRecord {
    "property": Object {
      "displayLabel": "Label",
      "name": "label",
      "typename": "string",
    },
    "value": Object {
      "displayValue": "Dam Fantastic human-resource",
      "value": "Dam Fantastic human-resource",
      "valueFormat": 0,
    },
  },
  "records": Object {
    "nested-1-1": Array [
      PropertyRecord {
        "isReadonly": true,
        "property": Object {
          "displayLabel": "nested 3",
          "editor": Object {
            "name": "content",
            "params": Array [],
          },
          "name": "nested content field$nested 3",
          "typename": "float",
        },
        "value": Object {
          "displayValue": "",
          "value": undefined,
          "valueFormat": 0,
        },
      },
    ],
    "top-1": Array [
      PropertyRecord {
        "description": "parsing cross-platform withdrawal",
        "isReadonly": true,
        "property": Object {
          "displayLabel": "nested 1",
          "editor": Object {
            "name": "CSS",
            "params": Array [],
          },
          "name": "nested content field$nested 1",
          "typename": "datetime",
        },
        "value": Object {
          "displayValue": "parsing cross-platform withdrawal",
          "value": "Iraqi Dinar",
          "valueFormat": 0,
        },
      },
      PropertyRecord {
        "isReadonly": true,
        "property": Object {
          "displayLabel": "nested 2",
          "editor": Object {
            "name": "Berkshire",
            "params": Array [],
          },
          "name": "nested content field$nested 2",
          "typename": "bit",
        },
        "value": Object {
          "displayValue": "",
          "value": undefined,
          "valueFormat": 0,
        },
      },
    ],
  },
  "reusePropertyDataState": true,
}
`;

exports[`PropertyDataProvider getData with flat categories nested content handling removes nested content record when the only nested field is moved into a separate category and there are other records in nested content record category 1`] = `
Object {
  "categories": Array [
    Object {
      "expand": true,
      "label": "nested-1-1",
      "name": "nested-1-1",
    },
    Object {
      "expand": false,
      "label": "top-1",
      "name": "top-1",
    },
  ],
  "description": undefined,
  "label": PropertyRecord {
    "property": Object {
      "displayLabel": "Label",
      "name": "label",
      "typename": "string",
    },
    "value": Object {
      "displayValue": "RSS",
      "value": "RSS",
      "valueFormat": 0,
    },
  },
  "records": Object {
    "nested-1-1": Array [
      PropertyRecord {
        "isReadonly": true,
        "property": Object {
          "displayLabel": "nested 3",
          "editor": Object {
            "name": "programming",
            "params": Array [],
          },
          "name": "nested content field$nested 3",
          "typename": "double",
        },
        "value": Object {
          "displayValue": "",
          "value": undefined,
          "valueFormat": 0,
        },
      },
    ],
    "top-1": Array [
      PropertyRecord {
        "isReadonly": true,
        "property": Object {
          "displayLabel": "Nested Content",
          "name": "nested content field",
          "typename": "int",
        },
        "value": Object {
          "members": Object {
            "nested 1": PropertyRecord {
              "description": "Falkland Islands (Malvinas) index",
              "property": Object {
                "displayLabel": "nested 1",
                "editor": Object {
                  "name": "bypassing",
                  "params": Array [],
                },
                "name": "nested content field$nested 1",
                "typename": "geometry",
              },
              "value": Object {
                "displayValue": "Falkland Islands (Malvinas) index",
                "value": "Unbranded",
                "valueFormat": 0,
              },
            },
            "nested 2": PropertyRecord {
              "property": Object {
                "displayLabel": "nested 2",
                "name": "nested content field$nested 2",
                "typename": "int",
              },
              "value": Object {
                "displayValue": "",
                "value": undefined,
                "valueFormat": 0,
              },
            },
          },
          "valueFormat": 2,
        },
      },
      PropertyRecord {
        "description": "Small Granite Table",
        "isReadonly": true,
        "property": Object {
          "displayLabel": "primitive",
          "name": "primitive",
          "typename": "date",
        },
        "value": Object {
          "displayValue": "Small Granite Table",
          "value": "Human",
          "valueFormat": 0,
        },
      },
    ],
  },
  "reusePropertyDataState": true,
}
`;

exports[`PropertyDataProvider getData with flat categories nested content handling returns empty nested content for nested content with no values 1`] = `
Object {
  "categories": Array [
    Object {
      "expand": false,
      "label": "top-1",
      "name": "top-1",
    },
  ],
  "description": undefined,
  "label": PropertyRecord {
    "property": Object {
      "displayLabel": "Label",
      "name": "label",
      "typename": "string",
    },
    "value": Object {
      "displayValue": "Mouse",
      "value": "Mouse",
      "valueFormat": 0,
    },
  },
  "records": Object {
    "top-1": Array [
      PropertyRecord {
        "description": "pixel",
        "property": Object {
          "displayLabel": "primitive",
          "name": "primitive",
          "typename": "boolean",
        },
        "value": Object {
          "displayValue": "pixel",
          "value": "Incredible",
          "valueFormat": 0,
        },
      },
      PropertyRecord {
        "autoExpand": true,
        "isReadonly": true,
        "property": Object {
          "displayLabel": "Nested Content",
          "name": "nested content field",
          "typename": "point",
        },
        "value": Object {
          "items": Array [],
          "itemsTypeName": "point",
          "valueFormat": 1,
        },
      },
    ],
  },
  "reusePropertyDataState": true,
}
`;

exports[`PropertyDataProvider getData with flat categories nested content handling returns favorite nested content in a separate category when it's categorized 1`] = `
Object {
  "categories": Array [
    Object {
      "expand": true,
      "label": "Favorite",
      "name": "Favorite",
    },
    Object {
      "expand": false,
      "label": "nested-1-1",
      "name": "nested-1-1",
    },
    Object {
      "expand": true,
      "label": "top-1",
      "name": "top-1",
    },
  ],
  "description": undefined,
  "label": PropertyRecord {
    "property": Object {
      "displayLabel": "Label",
      "name": "label",
      "typename": "string",
    },
    "value": Object {
      "displayValue": "Investment Account primary interface",
      "value": "Investment Account primary interface",
      "valueFormat": 0,
    },
  },
  "records": Object {
    "Favorite": Array [
      PropertyRecord {
        "description": "Sao Tome and Principe Island",
        "property": Object {
          "displayLabel": "nested 1",
          "editor": Object {
            "name": "generate",
            "params": Array [],
          },
          "name": "nested content field$nested 1",
          "typename": "serial",
        },
        "value": Object {
          "displayValue": "Sao Tome and Principe Island",
          "value": "Sausages",
          "valueFormat": 0,
        },
      },
    ],
    "nested-1-1": Array [
      PropertyRecord {
        "isReadonly": true,
        "property": Object {
          "displayLabel": "nested 3",
          "editor": Object {
            "name": "Refined Fresh Salad",
            "params": Array [],
          },
          "name": "nested content field$nested 3",
          "typename": "float",
        },
        "value": Object {
          "displayValue": "",
          "value": undefined,
          "valueFormat": 0,
        },
      },
    ],
    "top-1": Array [
      PropertyRecord {
        "description": "Berkshire Cotton Factors",
        "property": Object {
          "displayLabel": "primitive",
          "editor": Object {
            "name": "Virginia",
            "params": Array [],
          },
          "name": "primitive",
          "typename": "enum",
        },
        "value": Object {
          "displayValue": "Berkshire Cotton Factors",
          "value": "Upgradable",
          "valueFormat": 0,
        },
      },
      PropertyRecord {
        "autoExpand": true,
        "isReadonly": true,
        "property": Object {
          "displayLabel": "Nested Content",
          "name": "nested content field",
          "typename": "double",
        },
        "value": Object {
          "members": Object {
            "nested 1": PropertyRecord {
              "description": "Sao Tome and Principe Island",
              "property": Object {
                "displayLabel": "nested 1",
                "editor": Object {
                  "name": "generate",
                  "params": Array [],
                },
                "name": "nested content field$nested 1",
                "typename": "serial",
              },
              "value": Object {
                "displayValue": "Sao Tome and Principe Island",
                "value": "Sausages",
                "valueFormat": 0,
              },
            },
            "nested 2": PropertyRecord {
              "property": Object {
                "displayLabel": "nested 2",
                "name": "nested content field$nested 2",
                "typename": "float",
              },
              "value": Object {
                "displayValue": "",
                "value": undefined,
                "valueFormat": 0,
              },
            },
          },
          "valueFormat": 2,
        },
      },
    ],
  },
  "reusePropertyDataState": true,
}
`;

exports[`PropertyDataProvider getData with flat categories nested content handling returns nested content in a separate category when it's categorized 1`] = `
Object {
  "categories": Array [
    Object {
      "expand": true,
      "label": "nested-1-1",
      "name": "nested-1-1",
    },
    Object {
      "expand": true,
      "label": "top-1",
      "name": "top-1",
    },
  ],
  "description": undefined,
  "label": PropertyRecord {
    "property": Object {
      "displayLabel": "Label",
      "name": "label",
      "typename": "string",
    },
    "value": Object {
      "displayValue": "digital Representative interface",
      "value": "digital Representative interface",
      "valueFormat": 0,
    },
  },
  "records": Object {
    "nested-1-1": Array [
      PropertyRecord {
        "isReadonly": true,
        "property": Object {
          "displayLabel": "nested 3",
          "editor": Object {
            "name": "redundant",
            "params": Array [],
          },
          "name": "nested content field$nested 3",
          "typename": "serial",
        },
        "value": Object {
          "displayValue": "",
          "value": undefined,
          "valueFormat": 0,
        },
      },
    ],
    "top-1": Array [
      PropertyRecord {
        "description": "RAM Bond Markets Units European Composite Unit (EURCO) Function-based",
        "isReadonly": true,
        "property": Object {
          "displayLabel": "primitive",
          "name": "primitive",
          "typename": "smallint",
        },
        "value": Object {
          "displayValue": "RAM Bond Markets Units European Composite Unit (EURCO) Function-based",
          "value": "Salad",
          "valueFormat": 0,
        },
      },
      PropertyRecord {
        "autoExpand": true,
        "isReadonly": true,
        "property": Object {
          "displayLabel": "Nested Content",
          "name": "nested content field",
          "typename": "binary",
        },
        "value": Object {
          "members": Object {
            "nested 1": PropertyRecord {
              "description": "PNG auxiliary Human",
              "isReadonly": true,
              "property": Object {
                "displayLabel": "nested 1",
                "editor": Object {
                  "name": "Paradigm",
                  "params": Array [],
                },
                "name": "nested content field$nested 1",
                "typename": "date",
              },
              "value": Object {
                "displayValue": "PNG auxiliary Human",
                "value": "overriding",
                "valueFormat": 0,
              },
            },
            "nested 2": PropertyRecord {
              "property": Object {
                "displayLabel": "nested 2",
                "name": "nested content field$nested 2",
                "typename": "int",
              },
              "value": Object {
                "displayValue": "",
                "value": undefined,
                "valueFormat": 0,
              },
            },
          },
          "valueFormat": 2,
        },
      },
    ],
  },
  "reusePropertyDataState": true,
}
`;

exports[`PropertyDataProvider getData with flat categories nested content handling returns nested content with multiple nested categorized records 1`] = `
Object {
  "categories": Array [
    Object {
      "expand": false,
      "label": "top-1",
      "name": "top-1",
    },
    Object {
      "expand": false,
      "label": "nested-1-1",
      "name": "nested-1-1",
    },
  ],
  "description": undefined,
  "label": PropertyRecord {
    "property": Object {
      "displayLabel": "Label",
      "name": "label",
      "typename": "string",
    },
    "value": Object {
      "displayValue": "SMS Extended program",
      "value": "SMS Extended program",
      "valueFormat": 0,
    },
  },
  "records": Object {
    "nested-1-1": Array [
      PropertyRecord {
        "description": undefined,
        "property": Object {
          "displayLabel": "nested 3",
          "editor": Object {
            "name": "grey",
            "params": Array [],
          },
          "name": "nested content field$nested 3",
          "typename": "blob[]",
        },
        "value": Object {
          "items": Array [
            PropertyRecord {
              "isReadonly": true,
              "property": Object {
                "displayLabel": "nested 3",
                "name": "nested content field$nested 3",
                "typename": "blob",
              },
              "value": Object {
                "displayValue": "",
                "value": undefined,
                "valueFormat": 0,
              },
            },
            PropertyRecord {
              "isReadonly": true,
              "property": Object {
                "displayLabel": "nested 3",
                "name": "nested content field$nested 3",
                "typename": "blob",
              },
              "value": Object {
                "displayValue": "",
                "value": undefined,
                "valueFormat": 0,
              },
            },
          ],
          "itemsTypeName": "blob",
          "valueFormat": 1,
        },
      },
    ],
    "top-1": Array [
      PropertyRecord {
        "isReadonly": true,
        "property": Object {
          "displayLabel": "Nested Content",
          "name": "nested content field",
          "typename": "smallint",
        },
        "value": Object {
          "items": Array [
            PropertyRecord {
              "isMerged": false,
              "isReadonly": true,
              "property": Object {
                "displayLabel": "Nested Content",
                "name": "nested content field",
                "typename": "smallint",
              },
              "value": Object {
                "members": Object {
                  "nested 1": PropertyRecord {
                    "description": "virtual",
                    "isReadonly": true,
                    "property": Object {
                      "displayLabel": "nested 1",
                      "name": "nested content field$nested 1",
                      "typename": "tinyint",
                    },
                    "value": Object {
                      "displayValue": "virtual",
                      "value": "navigating",
                      "valueFormat": 0,
                    },
                  },
                  "nested 2": PropertyRecord {
                    "description": "grey",
                    "isReadonly": true,
                    "property": Object {
                      "displayLabel": "nested 2",
                      "name": "nested content field$nested 2",
                      "typename": "set",
                    },
                    "value": Object {
                      "displayValue": "grey",
                      "value": "monitor",
                      "valueFormat": 0,
                    },
                  },
                },
                "valueFormat": 2,
              },
            },
            PropertyRecord {
              "isMerged": false,
              "isReadonly": true,
              "property": Object {
                "displayLabel": "Nested Content",
                "name": "nested content field",
                "typename": "smallint",
              },
              "value": Object {
                "members": Object {
                  "nested 1": PropertyRecord {
                    "description": "digital 1080p Checking Account",
                    "isReadonly": true,
                    "property": Object {
                      "displayLabel": "nested 1",
                      "name": "nested content field$nested 1",
                      "typename": "tinyint",
                    },
                    "value": Object {
                      "displayValue": "digital 1080p Checking Account",
                      "value": "Planner",
                      "valueFormat": 0,
                    },
                  },
                  "nested 2": PropertyRecord {
                    "description": "Awesome SQL Ukraine",
                    "isReadonly": true,
                    "property": Object {
                      "displayLabel": "nested 2",
                      "name": "nested content field$nested 2",
                      "typename": "set",
                    },
                    "value": Object {
                      "displayValue": "Awesome SQL Ukraine",
                      "value": "port",
                      "valueFormat": 0,
                    },
                  },
                },
                "valueFormat": 2,
              },
            },
          ],
          "itemsTypeName": "smallint",
          "valueFormat": 1,
        },
      },
    ],
  },
  "reusePropertyDataState": true,
}
`;

exports[`PropertyDataProvider getData with flat categories nested content handling returns nested content with multiple nested records 1`] = `
Object {
  "categories": Array [
    Object {
      "expand": true,
      "label": "nested-1-1",
      "name": "nested-1-1",
    },
    Object {
      "expand": true,
      "label": "top-1",
      "name": "top-1",
    },
  ],
  "description": undefined,
  "label": PropertyRecord {
    "property": Object {
      "displayLabel": "Label",
      "name": "label",
      "typename": "string",
    },
    "value": Object {
      "displayValue": "Mobility",
      "value": "Mobility",
      "valueFormat": 0,
    },
  },
  "records": Object {
    "nested-1-1": Array [
      PropertyRecord {
        "description": undefined,
        "isReadonly": true,
        "property": Object {
          "displayLabel": "nested 3",
          "name": "nested content field$nested 3",
          "typename": "varchar[]",
        },
        "value": Object {
          "items": Array [
            PropertyRecord {
              "isReadonly": true,
              "property": Object {
                "displayLabel": "nested 3",
                "name": "nested content field$nested 3",
                "typename": "varchar",
              },
              "value": Object {
                "displayValue": "",
                "value": undefined,
                "valueFormat": 0,
              },
            },
            PropertyRecord {
              "isReadonly": true,
              "property": Object {
                "displayLabel": "nested 3",
                "name": "nested content field$nested 3",
                "typename": "varchar",
              },
              "value": Object {
                "displayValue": "",
                "value": undefined,
                "valueFormat": 0,
              },
            },
          ],
          "itemsTypeName": "varchar",
          "valueFormat": 1,
        },
      },
    ],
    "top-1": Array [
      PropertyRecord {
        "description": "Branding calculate white",
        "isReadonly": true,
        "property": Object {
          "displayLabel": "primitive",
          "name": "primitive",
          "typename": "boolean",
        },
        "value": Object {
          "displayValue": "Branding calculate white",
          "value": "primary",
          "valueFormat": 0,
        },
      },
      PropertyRecord {
        "autoExpand": true,
        "property": Object {
          "displayLabel": "Nested Content",
          "name": "nested content field",
          "typename": "serial",
        },
        "value": Object {
          "items": Array [
            PropertyRecord {
              "isMerged": false,
              "isReadonly": false,
              "property": Object {
                "displayLabel": "Nested Content",
                "name": "nested content field",
                "typename": "serial",
              },
              "value": Object {
                "members": Object {
                  "nested 1": PropertyRecord {
                    "description": "panel",
                    "property": Object {
                      "displayLabel": "nested 1",
                      "editor": Object {
                        "name": "Lead",
                        "params": Array [],
                      },
                      "name": "nested content field$nested 1",
                      "typename": "smallint",
                    },
                    "value": Object {
                      "displayValue": "panel",
                      "value": "Oval",
                      "valueFormat": 0,
                    },
                  },
                  "nested 2": PropertyRecord {
                    "isReadonly": true,
                    "property": Object {
                      "displayLabel": "nested 2",
                      "editor": Object {
                        "name": "Cloned",
                        "params": Array [],
                      },
                      "name": "nested content field$nested 2",
                      "typename": "bigint",
                    },
                    "value": Object {
                      "displayValue": "",
                      "value": undefined,
                      "valueFormat": 0,
                    },
                  },
                },
                "valueFormat": 2,
              },
            },
            PropertyRecord {
              "isMerged": false,
              "isReadonly": false,
              "property": Object {
                "displayLabel": "Nested Content",
                "name": "nested content field",
                "typename": "serial",
              },
              "value": Object {
                "members": Object {
                  "nested 1": PropertyRecord {
                    "description": "invoice Isle",
                    "property": Object {
                      "displayLabel": "nested 1",
                      "editor": Object {
                        "name": "Lead",
                        "params": Array [],
                      },
                      "name": "nested content field$nested 1",
                      "typename": "smallint",
                    },
                    "value": Object {
                      "displayValue": "invoice Isle",
                      "value": "synthesize",
                      "valueFormat": 0,
                    },
                  },
                  "nested 2": PropertyRecord {
                    "isReadonly": true,
                    "property": Object {
                      "displayLabel": "nested 2",
                      "editor": Object {
                        "name": "Cloned",
                        "params": Array [],
                      },
                      "name": "nested content field$nested 2",
                      "typename": "bigint",
                    },
                    "value": Object {
                      "displayValue": "",
                      "value": undefined,
                      "valueFormat": 0,
                    },
                  },
                },
                "valueFormat": 2,
              },
            },
          ],
          "itemsTypeName": "serial",
          "valueFormat": 1,
        },
      },
    ],
  },
  "reusePropertyDataState": true,
}
`;

exports[`PropertyDataProvider getData with flat categories nested content handling returns nested content with multiple nested records when there's only one record in category 1`] = `
Object {
  "categories": Array [
    Object {
      "expand": true,
      "label": "nested-1-1",
      "name": "nested-1-1",
    },
    Object {
      "expand": false,
      "label": "top-1",
      "name": "top-1",
    },
  ],
  "description": undefined,
  "label": PropertyRecord {
    "property": Object {
      "displayLabel": "Label",
      "name": "label",
      "typename": "string",
    },
    "value": Object {
      "displayValue": "indexing alliance",
      "value": "indexing alliance",
      "valueFormat": 0,
    },
  },
  "records": Object {
    "nested-1-1": Array [
      PropertyRecord {
        "description": undefined,
        "isReadonly": true,
        "property": Object {
          "displayLabel": "nested 3",
          "editor": Object {
            "name": "Paradigm",
            "params": Array [],
          },
          "name": "nested content field$nested 3",
          "typename": "enum[]",
        },
        "value": Object {
          "items": Array [
            PropertyRecord {
              "isReadonly": true,
              "property": Object {
                "displayLabel": "nested 3",
                "name": "nested content field$nested 3",
                "typename": "enum",
              },
              "value": Object {
                "displayValue": "",
                "value": undefined,
                "valueFormat": 0,
              },
            },
            PropertyRecord {
              "isReadonly": true,
              "property": Object {
                "displayLabel": "nested 3",
                "name": "nested content field$nested 3",
                "typename": "enum",
              },
              "value": Object {
                "displayValue": "",
                "value": undefined,
                "valueFormat": 0,
              },
            },
          ],
          "itemsTypeName": "enum",
          "valueFormat": 1,
        },
      },
    ],
    "top-1": Array [
      PropertyRecord {
        "isReadonly": true,
        "property": Object {
          "displayLabel": "Nested Content",
          "name": "nested content field",
          "typename": "text",
        },
        "value": Object {
          "items": Array [
            PropertyRecord {
              "isMerged": false,
              "isReadonly": true,
              "property": Object {
                "displayLabel": "Nested Content",
                "name": "nested content field",
                "typename": "text",
              },
              "value": Object {
                "members": Object {
                  "nested 1": PropertyRecord {
                    "description": "Pennsylvania",
                    "isReadonly": true,
                    "property": Object {
                      "displayLabel": "nested 1",
                      "name": "nested content field$nested 1",
                      "typename": "geometry",
                    },
                    "value": Object {
                      "displayValue": "Pennsylvania",
                      "value": "Officer",
                      "valueFormat": 0,
                    },
                  },
                  "nested 2": PropertyRecord {
                    "isReadonly": true,
                    "property": Object {
                      "displayLabel": "nested 2",
                      "name": "nested content field$nested 2",
                      "typename": "decimal",
                    },
                    "value": Object {
                      "displayValue": "",
                      "value": undefined,
                      "valueFormat": 0,
                    },
                  },
                },
                "valueFormat": 2,
              },
            },
            PropertyRecord {
              "isMerged": false,
              "isReadonly": true,
              "property": Object {
                "displayLabel": "Nested Content",
                "name": "nested content field",
                "typename": "text",
              },
              "value": Object {
                "members": Object {
                  "nested 1": PropertyRecord {
                    "description": "strategic",
                    "isReadonly": true,
                    "property": Object {
                      "displayLabel": "nested 1",
                      "name": "nested content field$nested 1",
                      "typename": "geometry",
                    },
                    "value": Object {
                      "displayValue": "strategic",
                      "value": "Accountability",
                      "valueFormat": 0,
                    },
                  },
                  "nested 2": PropertyRecord {
                    "isReadonly": true,
                    "property": Object {
                      "displayLabel": "nested 2",
                      "name": "nested content field$nested 2",
                      "typename": "decimal",
                    },
                    "value": Object {
                      "displayValue": "",
                      "value": undefined,
                      "valueFormat": 0,
                    },
                  },
                },
                "valueFormat": 2,
              },
            },
          ],
          "itemsTypeName": "text",
          "valueFormat": 1,
        },
      },
    ],
  },
  "reusePropertyDataState": true,
}
`;

exports[`PropertyDataProvider getData with flat categories nested content handling returns nested content with single nested record 1`] = `
Object {
  "categories": Array [
    Object {
      "expand": false,
      "label": "nested-1-1",
      "name": "nested-1-1",
    },
    Object {
      "expand": true,
      "label": "top-1",
      "name": "top-1",
    },
  ],
  "description": undefined,
  "label": PropertyRecord {
    "property": Object {
      "displayLabel": "Label",
      "name": "label",
      "typename": "string",
    },
    "value": Object {
      "displayValue": "wireless Internal attitude",
      "value": "wireless Internal attitude",
      "valueFormat": 0,
    },
  },
  "records": Object {
    "nested-1-1": Array [
      PropertyRecord {
        "property": Object {
          "displayLabel": "nested 3",
          "name": "nested content field$nested 3",
          "typename": "set",
        },
        "value": Object {
          "displayValue": "",
          "value": undefined,
          "valueFormat": 0,
        },
      },
    ],
    "top-1": Array [
      PropertyRecord {
        "description": "Burundi visionary",
        "property": Object {
          "displayLabel": "primitive",
          "name": "primitive",
          "typename": "tinyint",
        },
        "value": Object {
          "displayValue": "Burundi visionary",
          "value": "Coordinator",
          "valueFormat": 0,
        },
      },
      PropertyRecord {
        "isReadonly": true,
        "property": Object {
          "displayLabel": "Nested Content",
          "name": "nested content field",
          "typename": "time",
        },
        "value": Object {
          "members": Object {
            "nested 1": PropertyRecord {
              "description": "microchip white Chair",
              "isReadonly": true,
              "property": Object {
                "displayLabel": "nested 1",
                "name": "nested content field$nested 1",
                "typename": "geometry",
              },
              "value": Object {
                "displayValue": "microchip white Chair",
                "value": "Functionality",
                "valueFormat": 0,
              },
            },
            "nested 2": PropertyRecord {
              "isReadonly": true,
              "property": Object {
                "displayLabel": "nested 2",
                "name": "nested content field$nested 2",
                "typename": "boolean",
              },
              "value": Object {
                "displayValue": "",
                "value": undefined,
                "valueFormat": 0,
              },
            },
          },
          "valueFormat": 2,
        },
      },
    ],
  },
  "reusePropertyDataState": true,
}
`;

exports[`PropertyDataProvider getData with flat categories nested content handling returns nested content with single nested record as a list of struct member records when there's only one record in category 1`] = `
Object {
  "categories": Array [
    Object {
      "expand": true,
      "label": "nested-1-1",
      "name": "nested-1-1",
    },
    Object {
      "expand": true,
      "label": "top-1",
      "name": "top-1",
    },
  ],
  "description": undefined,
  "label": PropertyRecord {
    "property": Object {
      "displayLabel": "Label",
      "name": "label",
      "typename": "string",
    },
    "value": Object {
      "displayValue": "Bedfordshire",
      "value": "Bedfordshire",
      "valueFormat": 0,
    },
  },
  "records": Object {
    "nested-1-1": Array [
      PropertyRecord {
        "property": Object {
          "displayLabel": "nested 3",
          "editor": Object {
            "name": "program",
            "params": Array [],
          },
          "name": "nested content field$nested 3",
          "typename": "set",
        },
        "value": Object {
          "displayValue": "",
          "value": undefined,
          "valueFormat": 0,
        },
      },
    ],
    "top-1": Array [
      PropertyRecord {
        "description": "Ohio",
        "isReadonly": true,
        "property": Object {
          "displayLabel": "nested 1",
          "name": "nested content field$nested 1",
          "typename": "float",
        },
        "value": Object {
          "displayValue": "Ohio",
          "value": "Outdoors",
          "valueFormat": 0,
        },
      },
      PropertyRecord {
        "property": Object {
          "displayLabel": "nested 2",
          "name": "nested content field$nested 2",
          "typename": "double",
        },
        "value": Object {
          "displayValue": "",
          "value": undefined,
          "valueFormat": 0,
        },
      },
    ],
  },
  "reusePropertyDataState": true,
}
`;

exports[`PropertyDataProvider getData with flat categories nested content handling returns nested content with single nested record when there's only one record in category 1`] = `
Object {
  "categories": Array [
    Object {
      "expand": false,
      "label": "top-1",
      "name": "top-1",
    },
    Object {
      "expand": true,
      "label": "nested-1-1",
      "name": "nested-1-1",
    },
  ],
  "description": undefined,
  "label": PropertyRecord {
    "property": Object {
      "displayLabel": "Label",
      "name": "label",
      "typename": "string",
    },
    "value": Object {
      "displayValue": "Berkshire Wooden",
      "value": "Berkshire Wooden",
      "valueFormat": 0,
    },
  },
  "records": Object {
    "nested-1-1": Array [
      PropertyRecord {
        "property": Object {
          "displayLabel": "nested 3",
          "editor": Object {
            "name": "experiences",
            "params": Array [],
          },
          "name": "nested content field$nested 3",
          "typename": "datetime",
        },
        "value": Object {
          "displayValue": "",
          "value": undefined,
          "valueFormat": 0,
        },
      },
    ],
    "top-1": Array [
      PropertyRecord {
        "description": "Principal payment",
        "isReadonly": true,
        "property": Object {
          "displayLabel": "nested 1",
          "editor": Object {
            "name": "synthesize",
            "params": Array [],
          },
          "name": "nested content field$nested 1",
          "typename": "bigint",
        },
        "value": Object {
          "displayValue": "Principal payment",
          "value": "Gloves",
          "valueFormat": 0,
        },
      },
      PropertyRecord {
        "isReadonly": true,
        "property": Object {
          "displayLabel": "nested 2",
          "editor": Object {
            "name": "Tunisia",
            "params": Array [],
          },
          "name": "nested content field$nested 2",
          "typename": "mediumint",
        },
        "value": Object {
          "displayValue": "",
          "value": undefined,
          "valueFormat": 0,
        },
      },
    ],
  },
  "reusePropertyDataState": true,
}
`;

exports[`PropertyDataProvider getData with flat categories nested content handling returns nothing for nested content with no values when there's only one record in category 1`] = `
Object {
  "categories": Array [],
  "description": undefined,
  "label": PropertyRecord {
    "property": Object {
      "displayLabel": "Label",
      "name": "label",
      "typename": "string",
    },
    "value": Object {
      "displayValue": "vertical online interactive",
      "value": "vertical online interactive",
      "valueFormat": 0,
    },
  },
  "records": Object {},
  "reusePropertyDataState": true,
}
`;

exports[`PropertyDataProvider getData with flat categories returns array property data 1`] = `
Object {
  "categories": Array [
    Object {
      "expand": false,
      "label": "Rustic",
      "name": "withdrawal",
    },
  ],
  "description": "Gorgeous Interactions",
  "label": PropertyRecord {
    "property": Object {
      "displayLabel": "Label",
      "name": "label",
      "typename": "string",
    },
    "value": Object {
      "displayValue": "Total",
      "value": "Total",
      "valueFormat": 0,
    },
  },
  "records": Object {
    "withdrawal": Array [
      PropertyRecord {
        "description": undefined,
        "property": Object {
          "displayLabel": "olive",
          "name": "SQL",
          "typename": "maroon",
        },
        "value": Object {
          "items": Array [
            PropertyRecord {
              "description": "some display value 1",
              "isReadonly": true,
              "property": Object {
                "displayLabel": "olive",
                "name": "SQL",
                "typename": "real",
              },
              "value": Object {
                "displayValue": "some display value 1",
                "value": "some value 1",
                "valueFormat": 0,
              },
            },
            PropertyRecord {
              "description": "some display value 2",
              "isReadonly": true,
              "property": Object {
                "displayLabel": "olive",
                "name": "SQL",
                "typename": "real",
              },
              "value": Object {
                "displayValue": "some display value 2",
                "value": "some value 2",
                "valueFormat": 0,
              },
            },
          ],
          "itemsTypeName": "real",
          "valueFormat": 1,
        },
      },
    ],
  },
  "reusePropertyDataState": true,
}
`;

exports[`PropertyDataProvider getData with flat categories returns primitive property data 1`] = `
Object {
  "categories": Array [
    Object {
      "expand": true,
      "label": "cross-platform Tennessee",
      "name": "dedicated",
    },
  ],
  "description": "Concrete Djibouti maroon",
  "label": PropertyRecord {
    "property": Object {
      "displayLabel": "Label",
      "name": "label",
      "typename": "string",
    },
    "value": Object {
      "displayValue": "card synergy Skyway",
      "value": "card synergy Skyway",
      "valueFormat": 0,
    },
  },
  "records": Object {
    "dedicated": Array [
      PropertyRecord {
        "description": "solutions Cambridgeshire Facilitator",
        "isReadonly": true,
        "property": Object {
          "displayLabel": "De-engineered",
          "editor": Object {
            "name": "alarm",
            "params": Array [],
          },
          "name": "tan",
          "typename": "serial",
        },
        "value": Object {
          "displayValue": "solutions Cambridgeshire Facilitator",
          "value": "Computer",
          "valueFormat": 0,
        },
      },
    ],
  },
  "reusePropertyDataState": true,
}
`;

exports[`PropertyDataProvider getData with flat categories returns struct property data 1`] = `
Object {
  "categories": Array [
    Object {
      "expand": true,
      "label": "heuristic Bond Markets Units European Composite Unit (EURCO) Metal",
      "name": "functionalities",
    },
  ],
  "description": "solution-oriented United States Minor Outlying Islands",
  "label": PropertyRecord {
    "property": Object {
      "displayLabel": "Label",
      "name": "label",
      "typename": "string",
    },
    "value": Object {
      "displayValue": "RAM",
      "value": "RAM",
      "valueFormat": 0,
    },
  },
  "records": Object {
    "functionalities": Array [
      PropertyRecord {
        "description": undefined,
        "isReadonly": true,
        "property": Object {
          "displayLabel": "payment Cotton Handmade",
          "name": "extend",
          "typename": "Optimization",
        },
        "value": Object {
          "members": Object {
            "Borders": PropertyRecord {
              "description": "some display value",
              "isReadonly": true,
              "property": Object {
                "displayLabel": "Frozen pricing structure EXE",
                "name": "Borders",
                "typename": "tinyint",
              },
              "value": Object {
                "displayValue": "some display value",
                "value": "some value",
                "valueFormat": 0,
              },
            },
          },
          "valueFormat": 2,
        },
      },
    ],
  },
  "reusePropertyDataState": true,
}
`;

exports[`PropertyDataProvider getData with nested categories handles records with no values 1`] = `
Object {
  "categories": Array [
    Object {
      "childCategories": Array [],
      "expand": true,
      "label": "invoice deposit Principal",
      "name": "invoice",
      "parentCategory": undefined,
    },
  ],
  "description": "1080p Avon maroon",
  "label": PropertyRecord {
    "property": Object {
      "displayLabel": "Label",
      "name": "label",
      "typename": "string",
    },
    "value": Object {
      "displayValue": "neural Concrete Nakfa",
      "value": "neural Concrete Nakfa",
      "valueFormat": 0,
    },
  },
  "records": Object {
    "invoice": Array [
      PropertyRecord {
        "property": Object {
          "displayLabel": "Liaison Automotive",
          "name": "Ohio",
          "typename": "set",
        },
        "value": Object {
          "displayValue": "",
          "value": undefined,
          "valueFormat": 0,
        },
      },
    ],
  },
  "reusePropertyDataState": true,
}
`;

exports[`PropertyDataProvider getData with nested categories nested content handling removes nested content record when the nested field is categorized but there's no content 1`] = `
Object {
  "categories": Array [],
  "description": undefined,
  "label": PropertyRecord {
    "property": Object {
      "displayLabel": "Label",
      "name": "label",
      "typename": "string",
    },
    "value": Object {
      "displayValue": "intuitive Tools Creek",
      "value": "intuitive Tools Creek",
      "valueFormat": 0,
    },
  },
  "records": Object {},
  "reusePropertyDataState": true,
}
`;

exports[`PropertyDataProvider getData with nested categories nested content handling removes nested content record when the only nested field is moved into a separate category and nested content record is the only record in category 1`] = `
Object {
  "categories": Array [
    Object {
      "childCategories": Array [],
      "expand": true,
      "label": "nested-1-1",
      "name": "nested-1-1",
      "parentCategory": undefined,
    },
    Object {
      "childCategories": Array [],
      "expand": true,
      "label": "top-1",
      "name": "top-1",
      "parentCategory": undefined,
    },
  ],
  "description": undefined,
  "label": PropertyRecord {
    "property": Object {
      "displayLabel": "Label",
      "name": "label",
      "typename": "string",
    },
    "value": Object {
      "displayValue": "bluetooth",
      "value": "bluetooth",
      "valueFormat": 0,
    },
  },
  "records": Object {
    "nested-1-1": Array [
      PropertyRecord {
        "property": Object {
          "displayLabel": "nested 3",
          "name": "nested content field$nested 3",
          "typename": "bit",
        },
        "value": Object {
          "displayValue": "",
          "value": undefined,
          "valueFormat": 0,
        },
      },
    ],
    "top-1": Array [
      PropertyRecord {
        "isReadonly": true,
        "property": Object {
          "displayLabel": "nested 2",
          "name": "nested content field$nested 2",
          "typename": "tinyint",
        },
        "value": Object {
          "displayValue": "",
          "value": undefined,
          "valueFormat": 0,
        },
      },
      PropertyRecord {
        "description": "AI envisioneer",
        "isReadonly": true,
        "property": Object {
          "displayLabel": "nested 1",
          "name": "nested content field$nested 1",
          "typename": "mediumint",
        },
        "value": Object {
          "displayValue": "AI envisioneer",
          "value": "magenta",
          "valueFormat": 0,
        },
      },
    ],
  },
  "reusePropertyDataState": true,
}
`;

exports[`PropertyDataProvider getData with nested categories nested content handling removes nested content record when the only nested field is moved into a separate category and there are other records in nested content record category 1`] = `
Object {
  "categories": Array [
    Object {
      "childCategories": Array [
        Object {
          "childCategories": Array [],
          "expand": false,
          "label": "nested-1-1",
          "name": "nested-1-1",
          "parentCategory": [Circular],
        },
      ],
      "expand": false,
      "label": "top-1",
      "name": "top-1",
      "parentCategory": undefined,
    },
  ],
  "description": undefined,
  "label": PropertyRecord {
    "property": Object {
      "displayLabel": "Label",
      "name": "label",
      "typename": "string",
    },
    "value": Object {
      "displayValue": "port",
      "value": "port",
      "valueFormat": 0,
    },
  },
  "records": Object {
    "nested-1-1": Array [
      PropertyRecord {
        "isReadonly": true,
        "property": Object {
          "displayLabel": "nested 3",
          "editor": Object {
            "name": "bandwidth",
            "params": Array [],
          },
          "name": "nested content field$nested 3",
          "typename": "set",
        },
        "value": Object {
          "displayValue": "",
          "value": undefined,
          "valueFormat": 0,
        },
      },
    ],
    "top-1": Array [
      PropertyRecord {
        "autoExpand": true,
        "property": Object {
          "displayLabel": "Nested Content",
          "name": "nested content field",
          "typename": "time",
        },
        "value": Object {
          "members": Object {
            "nested 1": PropertyRecord {
              "description": "Forward primary",
              "property": Object {
                "displayLabel": "nested 1",
                "editor": Object {
                  "name": "homogeneous",
                  "params": Array [],
                },
                "name": "nested content field$nested 1",
                "typename": "bigint",
              },
              "value": Object {
                "displayValue": "Forward primary",
                "value": "blue",
                "valueFormat": 0,
              },
            },
            "nested 2": PropertyRecord {
              "isReadonly": true,
              "property": Object {
                "displayLabel": "nested 2",
                "name": "nested content field$nested 2",
                "typename": "real",
              },
              "value": Object {
                "displayValue": "",
                "value": undefined,
                "valueFormat": 0,
              },
            },
          },
          "valueFormat": 2,
        },
      },
      PropertyRecord {
        "description": "Denar capacitor",
        "isReadonly": true,
        "property": Object {
          "displayLabel": "primitive",
          "editor": Object {
            "name": "Small Soft Chair",
            "params": Array [],
          },
          "name": "primitive",
          "typename": "text",
        },
        "value": Object {
          "displayValue": "Denar capacitor",
          "value": "Incredible Fresh Salad",
          "valueFormat": 0,
        },
      },
    ],
  },
  "reusePropertyDataState": true,
}
`;

exports[`PropertyDataProvider getData with nested categories nested content handling returns empty nested content for nested content with no values 1`] = `
Object {
  "categories": Array [
    Object {
      "childCategories": Array [],
      "expand": true,
      "label": "top-1",
      "name": "top-1",
      "parentCategory": undefined,
    },
  ],
  "description": undefined,
  "label": PropertyRecord {
    "property": Object {
      "displayLabel": "Label",
      "name": "label",
      "typename": "string",
    },
    "value": Object {
      "displayValue": "JBOD Soft",
      "value": "JBOD Soft",
      "valueFormat": 0,
    },
  },
  "records": Object {
    "top-1": Array [
      PropertyRecord {
        "property": Object {
          "displayLabel": "Nested Content",
          "name": "nested content field",
          "typename": "int",
        },
        "value": Object {
          "items": Array [],
          "itemsTypeName": "int",
          "valueFormat": 1,
        },
      },
      PropertyRecord {
        "description": "Up-sized haptic",
        "isReadonly": true,
        "property": Object {
          "displayLabel": "primitive",
          "editor": Object {
            "name": "Washington",
            "params": Array [],
          },
          "name": "primitive",
          "typename": "real",
        },
        "value": Object {
          "displayValue": "Up-sized haptic",
          "value": "enhance",
          "valueFormat": 0,
        },
      },
    ],
  },
  "reusePropertyDataState": true,
}
`;

exports[`PropertyDataProvider getData with nested categories nested content handling returns favorite nested content in a separate category when it's categorized 1`] = `
Object {
  "categories": Array [
    Object {
      "childCategories": Array [
        Object {
          "childCategories": Array [],
          "expand": false,
          "label": "nested-1-1",
          "name": "nested-1-1",
          "parentCategory": [Circular],
        },
      ],
      "expand": true,
      "label": "top-1",
      "name": "top-1",
      "parentCategory": undefined,
    },
  ],
  "description": undefined,
  "label": PropertyRecord {
    "property": Object {
      "displayLabel": "Label",
      "name": "label",
      "typename": "string",
    },
    "value": Object {
      "displayValue": "bottom-line Digitized Washington",
      "value": "bottom-line Digitized Washington",
      "valueFormat": 0,
    },
  },
  "records": Object {
    "nested-1-1": Array [
      PropertyRecord {
        "isReadonly": true,
        "property": Object {
          "displayLabel": "nested 3",
          "editor": Object {
            "name": "payment",
            "params": Array [],
          },
          "name": "nested content field$nested 3",
          "typename": "set",
        },
        "value": Object {
          "displayValue": "",
          "value": undefined,
          "valueFormat": 0,
        },
      },
    ],
    "top-1": Array [
      PropertyRecord {
        "isReadonly": true,
        "property": Object {
          "displayLabel": "Nested Content",
          "name": "nested content field",
          "typename": "decimal",
        },
        "value": Object {
          "members": Object {
            "nested 1": PropertyRecord {
              "description": "Maine Usability",
              "isReadonly": true,
              "property": Object {
                "displayLabel": "nested 1",
                "name": "nested content field$nested 1",
                "typename": "datetime",
              },
              "value": Object {
                "displayValue": "Maine Usability",
                "value": "Ecuador",
                "valueFormat": 0,
              },
            },
            "nested 2": PropertyRecord {
              "property": Object {
                "displayLabel": "nested 2",
                "editor": Object {
                  "name": "PCI",
                  "params": Array [],
                },
                "name": "nested content field$nested 2",
                "typename": "bit",
              },
              "value": Object {
                "displayValue": "",
                "value": undefined,
                "valueFormat": 0,
              },
            },
          },
          "valueFormat": 2,
        },
      },
      PropertyRecord {
        "description": "Buckinghamshire Health",
        "property": Object {
          "displayLabel": "primitive",
          "name": "primitive",
          "typename": "enum",
        },
        "value": Object {
          "displayValue": "Buckinghamshire Health",
          "value": "Chips",
          "valueFormat": 0,
        },
      },
    ],
  },
  "reusePropertyDataState": true,
}
`;

exports[`PropertyDataProvider getData with nested categories nested content handling returns nested content in a separate category when it's categorized 1`] = `
Object {
  "categories": Array [
    Object {
      "childCategories": Array [
        Object {
          "childCategories": Array [],
          "expand": false,
          "label": "nested-1-1",
          "name": "nested-1-1",
          "parentCategory": [Circular],
        },
      ],
      "expand": false,
      "label": "top-1",
      "name": "top-1",
      "parentCategory": undefined,
    },
  ],
  "description": undefined,
  "label": PropertyRecord {
    "property": Object {
      "displayLabel": "Label",
      "name": "label",
      "typename": "string",
    },
    "value": Object {
      "displayValue": "strategize Brand Keyboard",
      "value": "strategize Brand Keyboard",
      "valueFormat": 0,
    },
  },
  "records": Object {
    "nested-1-1": Array [
      PropertyRecord {
        "property": Object {
          "displayLabel": "nested 3",
          "editor": Object {
            "name": "Buckinghamshire",
            "params": Array [],
          },
          "name": "nested content field$nested 3",
          "typename": "varchar",
        },
        "value": Object {
          "displayValue": "",
          "value": undefined,
          "valueFormat": 0,
        },
      },
    ],
    "top-1": Array [
      PropertyRecord {
        "property": Object {
          "displayLabel": "Nested Content",
          "name": "nested content field",
          "typename": "boolean",
        },
        "value": Object {
          "members": Object {
            "nested 1": PropertyRecord {
              "description": "Libyan Arab Jamahiriya",
              "property": Object {
                "displayLabel": "nested 1",
                "editor": Object {
                  "name": "Chair",
                  "params": Array [],
                },
                "name": "nested content field$nested 1",
                "typename": "bit",
              },
              "value": Object {
                "displayValue": "Libyan Arab Jamahiriya",
                "value": "teal",
                "valueFormat": 0,
              },
            },
            "nested 2": PropertyRecord {
              "isReadonly": true,
              "property": Object {
                "displayLabel": "nested 2",
                "name": "nested content field$nested 2",
                "typename": "mediumint",
              },
              "value": Object {
                "displayValue": "",
                "value": undefined,
                "valueFormat": 0,
              },
            },
          },
          "valueFormat": 2,
        },
      },
      PropertyRecord {
        "description": "JSON 1080p",
        "property": Object {
          "displayLabel": "primitive",
          "editor": Object {
            "name": "Switzerland",
            "params": Array [],
          },
          "name": "primitive",
          "typename": "smallint",
        },
        "value": Object {
          "displayValue": "JSON 1080p",
          "value": "Buckinghamshire",
          "valueFormat": 0,
        },
      },
    ],
  },
  "reusePropertyDataState": true,
}
`;

exports[`PropertyDataProvider getData with nested categories nested content handling returns nested content with multiple nested categorized records 1`] = `
Object {
  "categories": Array [
    Object {
      "childCategories": Array [],
      "expand": false,
      "label": "top-1",
      "name": "top-1",
      "parentCategory": undefined,
    },
    Object {
      "childCategories": Array [],
      "expand": true,
      "label": "nested-1-1",
      "name": "nested-1-1",
      "parentCategory": undefined,
    },
  ],
  "description": undefined,
  "label": PropertyRecord {
    "property": Object {
      "displayLabel": "Label",
      "name": "label",
      "typename": "string",
    },
    "value": Object {
      "displayValue": "Global navigate",
      "value": "Global navigate",
      "valueFormat": 0,
    },
  },
  "records": Object {
    "nested-1-1": Array [
      PropertyRecord {
        "description": undefined,
        "property": Object {
          "displayLabel": "nested 3",
          "name": "nested content field$nested 3",
          "typename": "binary[]",
        },
        "value": Object {
          "items": Array [
            PropertyRecord {
              "isReadonly": true,
              "property": Object {
                "displayLabel": "nested 3",
                "name": "nested content field$nested 3",
                "typename": "binary",
              },
              "value": Object {
                "displayValue": "",
                "value": undefined,
                "valueFormat": 0,
              },
            },
            PropertyRecord {
              "isReadonly": true,
              "property": Object {
                "displayLabel": "nested 3",
                "name": "nested content field$nested 3",
                "typename": "binary",
              },
              "value": Object {
                "displayValue": "",
                "value": undefined,
                "valueFormat": 0,
              },
            },
          ],
          "itemsTypeName": "binary",
          "valueFormat": 1,
        },
      },
    ],
    "top-1": Array [
      PropertyRecord {
        "isReadonly": true,
        "property": Object {
          "displayLabel": "Nested Content",
          "name": "nested content field",
          "typename": "blob",
        },
        "value": Object {
          "items": Array [
            PropertyRecord {
              "isMerged": false,
              "isReadonly": true,
              "property": Object {
                "displayLabel": "Nested Content",
                "name": "nested content field",
                "typename": "blob",
              },
              "value": Object {
                "members": Object {
                  "nested 1": PropertyRecord {
                    "description": "Investment Account core Functionality",
                    "isReadonly": true,
                    "property": Object {
                      "displayLabel": "nested 1",
                      "editor": Object {
                        "name": "Secured",
                        "params": Array [],
                      },
                      "name": "nested content field$nested 1",
                      "typename": "text",
                    },
                    "value": Object {
                      "displayValue": "Investment Account core Functionality",
                      "value": "Accounts",
                      "valueFormat": 0,
                    },
                  },
                  "nested 2": PropertyRecord {
                    "description": "Shoes",
                    "property": Object {
                      "displayLabel": "nested 2",
                      "name": "nested content field$nested 2",
                      "typename": "boolean",
                    },
                    "value": Object {
                      "displayValue": "Shoes",
                      "value": "Portugal",
                      "valueFormat": 0,
                    },
                  },
                },
                "valueFormat": 2,
              },
            },
            PropertyRecord {
              "isMerged": false,
              "isReadonly": true,
              "property": Object {
                "displayLabel": "Nested Content",
                "name": "nested content field",
                "typename": "blob",
              },
              "value": Object {
                "members": Object {
                  "nested 1": PropertyRecord {
                    "description": "functionalities",
                    "isReadonly": true,
                    "property": Object {
                      "displayLabel": "nested 1",
                      "editor": Object {
                        "name": "Secured",
                        "params": Array [],
                      },
                      "name": "nested content field$nested 1",
                      "typename": "text",
                    },
                    "value": Object {
                      "displayValue": "functionalities",
                      "value": "Tuna",
                      "valueFormat": 0,
                    },
                  },
                  "nested 2": PropertyRecord {
                    "description": "Taiwan",
                    "property": Object {
                      "displayLabel": "nested 2",
                      "name": "nested content field$nested 2",
                      "typename": "boolean",
                    },
                    "value": Object {
                      "displayValue": "Taiwan",
                      "value": "utilisation",
                      "valueFormat": 0,
                    },
                  },
                },
                "valueFormat": 2,
              },
            },
          ],
          "itemsTypeName": "blob",
          "valueFormat": 1,
        },
      },
    ],
  },
  "reusePropertyDataState": true,
}
`;

exports[`PropertyDataProvider getData with nested categories nested content handling returns nested content with multiple nested records 1`] = `
Object {
  "categories": Array [
    Object {
      "childCategories": Array [
        Object {
          "childCategories": Array [],
          "expand": false,
          "label": "nested-1-1",
          "name": "nested-1-1",
          "parentCategory": [Circular],
        },
      ],
      "expand": false,
      "label": "top-1",
      "name": "top-1",
      "parentCategory": undefined,
    },
  ],
  "description": undefined,
  "label": PropertyRecord {
    "property": Object {
      "displayLabel": "Label",
      "name": "label",
      "typename": "string",
    },
    "value": Object {
      "displayValue": "Ball fuchsia Salad",
      "value": "Ball fuchsia Salad",
      "valueFormat": 0,
    },
  },
  "records": Object {
    "nested-1-1": Array [
      PropertyRecord {
        "description": undefined,
        "property": Object {
          "displayLabel": "nested 3",
          "editor": Object {
            "name": "Personal Loan Account",
            "params": Array [],
          },
          "name": "nested content field$nested 3",
          "typename": "set[]",
        },
        "value": Object {
          "items": Array [
            PropertyRecord {
              "isReadonly": true,
              "property": Object {
                "displayLabel": "nested 3",
                "name": "nested content field$nested 3",
                "typename": "set",
              },
              "value": Object {
                "displayValue": "",
                "value": undefined,
                "valueFormat": 0,
              },
            },
            PropertyRecord {
              "isReadonly": true,
              "property": Object {
                "displayLabel": "nested 3",
                "name": "nested content field$nested 3",
                "typename": "set",
              },
              "value": Object {
                "displayValue": "",
                "value": undefined,
                "valueFormat": 0,
              },
            },
          ],
          "itemsTypeName": "set",
          "valueFormat": 1,
        },
      },
    ],
    "top-1": Array [
      PropertyRecord {
        "autoExpand": true,
        "property": Object {
          "displayLabel": "Nested Content",
          "name": "nested content field",
          "typename": "float",
        },
        "value": Object {
          "items": Array [
            PropertyRecord {
              "isMerged": false,
              "isReadonly": false,
              "property": Object {
                "displayLabel": "Nested Content",
                "name": "nested content field",
                "typename": "float",
              },
              "value": Object {
                "members": Object {
                  "nested 1": PropertyRecord {
                    "description": "bypass TCP innovative",
                    "isReadonly": true,
                    "property": Object {
                      "displayLabel": "nested 1",
                      "name": "nested content field$nested 1",
                      "typename": "geometry",
                    },
                    "value": Object {
                      "displayValue": "bypass TCP innovative",
                      "value": "Legacy",
                      "valueFormat": 0,
                    },
                  },
                  "nested 2": PropertyRecord {
                    "property": Object {
                      "displayLabel": "nested 2",
                      "editor": Object {
                        "name": "Run",
                        "params": Array [],
                      },
                      "name": "nested content field$nested 2",
                      "typename": "datetime",
                    },
                    "value": Object {
                      "displayValue": "",
                      "value": undefined,
                      "valueFormat": 0,
                    },
                  },
                },
                "valueFormat": 2,
              },
            },
            PropertyRecord {
              "isMerged": false,
              "isReadonly": false,
              "property": Object {
                "displayLabel": "Nested Content",
                "name": "nested content field",
                "typename": "float",
              },
              "value": Object {
                "members": Object {
                  "nested 1": PropertyRecord {
                    "description": "model Pula",
                    "isReadonly": true,
                    "property": Object {
                      "displayLabel": "nested 1",
                      "name": "nested content field$nested 1",
                      "typename": "geometry",
                    },
                    "value": Object {
                      "displayValue": "model Pula",
                      "value": "Albania",
                      "valueFormat": 0,
                    },
                  },
                  "nested 2": PropertyRecord {
                    "property": Object {
                      "displayLabel": "nested 2",
                      "editor": Object {
                        "name": "Run",
                        "params": Array [],
                      },
                      "name": "nested content field$nested 2",
                      "typename": "datetime",
                    },
                    "value": Object {
                      "displayValue": "",
                      "value": undefined,
                      "valueFormat": 0,
                    },
                  },
                },
                "valueFormat": 2,
              },
            },
          ],
          "itemsTypeName": "float",
          "valueFormat": 1,
        },
      },
      PropertyRecord {
        "description": "Facilitator TCP input",
        "isReadonly": true,
        "property": Object {
          "displayLabel": "primitive",
          "editor": Object {
            "name": "AGP",
            "params": Array [],
          },
          "name": "primitive",
          "typename": "binary",
        },
        "value": Object {
          "displayValue": "Facilitator TCP input",
          "value": "grey",
          "valueFormat": 0,
        },
      },
    ],
  },
  "reusePropertyDataState": true,
}
`;

exports[`PropertyDataProvider getData with nested categories nested content handling returns nested content with multiple nested records when there's only one record in category 1`] = `
Object {
  "categories": Array [
    Object {
      "childCategories": Array [],
      "expand": false,
      "label": "nested-1-1",
      "name": "nested-1-1",
      "parentCategory": undefined,
    },
    Object {
      "childCategories": Array [],
      "expand": true,
      "label": "top-1",
      "name": "top-1",
      "parentCategory": undefined,
    },
  ],
  "description": undefined,
  "label": PropertyRecord {
    "property": Object {
      "displayLabel": "Label",
      "name": "label",
      "typename": "string",
    },
    "value": Object {
      "displayValue": "solid state",
      "value": "solid state",
      "valueFormat": 0,
    },
  },
  "records": Object {
    "nested-1-1": Array [
      PropertyRecord {
        "description": undefined,
        "isReadonly": true,
        "property": Object {
          "displayLabel": "nested 3",
          "editor": Object {
            "name": "Rwanda Franc",
            "params": Array [],
          },
          "name": "nested content field$nested 3",
          "typename": "date[]",
        },
        "value": Object {
          "items": Array [
            PropertyRecord {
              "isReadonly": true,
              "property": Object {
                "displayLabel": "nested 3",
                "name": "nested content field$nested 3",
                "typename": "date",
              },
              "value": Object {
                "displayValue": "",
                "value": undefined,
                "valueFormat": 0,
              },
            },
            PropertyRecord {
              "isReadonly": true,
              "property": Object {
                "displayLabel": "nested 3",
                "name": "nested content field$nested 3",
                "typename": "date",
              },
              "value": Object {
                "displayValue": "",
                "value": undefined,
                "valueFormat": 0,
              },
            },
          ],
          "itemsTypeName": "date",
          "valueFormat": 1,
        },
      },
    ],
    "top-1": Array [
      PropertyRecord {
        "autoExpand": true,
        "property": Object {
          "displayLabel": "Nested Content",
          "name": "nested content field",
          "typename": "bigint",
        },
        "value": Object {
          "items": Array [
            PropertyRecord {
              "isMerged": false,
              "isReadonly": false,
              "property": Object {
                "displayLabel": "Nested Content",
                "name": "nested content field",
                "typename": "bigint",
              },
              "value": Object {
                "members": Object {
                  "nested 1": PropertyRecord {
                    "description": "payment system withdrawal",
                    "isReadonly": true,
                    "property": Object {
                      "displayLabel": "nested 1",
                      "editor": Object {
                        "name": "Tuna",
                        "params": Array [],
                      },
                      "name": "nested content field$nested 1",
                      "typename": "smallint",
                    },
                    "value": Object {
                      "displayValue": "payment system withdrawal",
                      "value": "generate",
                      "valueFormat": 0,
                    },
                  },
                  "nested 2": PropertyRecord {
                    "property": Object {
                      "displayLabel": "nested 2",
                      "name": "nested content field$nested 2",
                      "typename": "bigint",
                    },
                    "value": Object {
                      "displayValue": "",
                      "value": undefined,
                      "valueFormat": 0,
                    },
                  },
                },
                "valueFormat": 2,
              },
            },
            PropertyRecord {
              "isMerged": false,
              "isReadonly": false,
              "property": Object {
                "displayLabel": "Nested Content",
                "name": "nested content field",
                "typename": "bigint",
              },
              "value": Object {
                "members": Object {
                  "nested 1": PropertyRecord {
                    "description": "Virginia Interactions Fresh",
                    "isReadonly": true,
                    "property": Object {
                      "displayLabel": "nested 1",
                      "editor": Object {
                        "name": "Tuna",
                        "params": Array [],
                      },
                      "name": "nested content field$nested 1",
                      "typename": "smallint",
                    },
                    "value": Object {
                      "displayValue": "Virginia Interactions Fresh",
                      "value": "Re-engineered",
                      "valueFormat": 0,
                    },
                  },
                  "nested 2": PropertyRecord {
                    "property": Object {
                      "displayLabel": "nested 2",
                      "name": "nested content field$nested 2",
                      "typename": "bigint",
                    },
                    "value": Object {
                      "displayValue": "",
                      "value": undefined,
                      "valueFormat": 0,
                    },
                  },
                },
                "valueFormat": 2,
              },
            },
          ],
          "itemsTypeName": "bigint",
          "valueFormat": 1,
        },
      },
    ],
  },
  "reusePropertyDataState": true,
}
`;

exports[`PropertyDataProvider getData with nested categories nested content handling returns nested content with single nested record 1`] = `
Object {
  "categories": Array [
    Object {
      "childCategories": Array [
        Object {
          "childCategories": Array [],
          "expand": false,
          "label": "nested-1-1",
          "name": "nested-1-1",
          "parentCategory": [Circular],
        },
      ],
      "expand": false,
      "label": "top-1",
      "name": "top-1",
      "parentCategory": undefined,
    },
  ],
  "description": undefined,
  "label": PropertyRecord {
    "property": Object {
      "displayLabel": "Label",
      "name": "label",
      "typename": "string",
    },
    "value": Object {
      "displayValue": "synergistic card",
      "value": "synergistic card",
      "valueFormat": 0,
    },
  },
  "records": Object {
    "nested-1-1": Array [
      PropertyRecord {
        "property": Object {
          "displayLabel": "nested 3",
          "name": "nested content field$nested 3",
          "typename": "set",
        },
        "value": Object {
          "displayValue": "",
          "value": undefined,
          "valueFormat": 0,
        },
      },
    ],
    "top-1": Array [
      PropertyRecord {
        "description": "action-items lime",
        "isReadonly": true,
        "property": Object {
          "displayLabel": "primitive",
          "name": "primitive",
          "typename": "real",
        },
        "value": Object {
          "displayValue": "action-items lime",
          "value": "SSL",
          "valueFormat": 0,
        },
      },
      PropertyRecord {
        "autoExpand": true,
        "isReadonly": true,
        "property": Object {
          "displayLabel": "Nested Content",
          "name": "nested content field",
          "typename": "mediumint",
        },
        "value": Object {
          "members": Object {
            "nested 1": PropertyRecord {
              "description": "Bypass",
              "isReadonly": true,
              "property": Object {
                "displayLabel": "nested 1",
                "name": "nested content field$nested 1",
                "typename": "boolean",
              },
              "value": Object {
                "displayValue": "Bypass",
                "value": "paradigms",
                "valueFormat": 0,
              },
            },
            "nested 2": PropertyRecord {
              "property": Object {
                "displayLabel": "nested 2",
                "name": "nested content field$nested 2",
                "typename": "double",
              },
              "value": Object {
                "displayValue": "",
                "value": undefined,
                "valueFormat": 0,
              },
            },
          },
          "valueFormat": 2,
        },
      },
    ],
  },
  "reusePropertyDataState": true,
}
`;

exports[`PropertyDataProvider getData with nested categories nested content handling returns nested content with single nested record as a list of struct member records when there's only one record in category 1`] = `
Object {
  "categories": Array [
    Object {
      "childCategories": Array [],
      "expand": false,
      "label": "nested-1-1",
      "name": "nested-1-1",
      "parentCategory": undefined,
    },
    Object {
      "childCategories": Array [],
      "expand": true,
      "label": "top-1",
      "name": "top-1",
      "parentCategory": undefined,
    },
  ],
  "description": undefined,
  "label": PropertyRecord {
    "property": Object {
      "displayLabel": "Label",
      "name": "label",
      "typename": "string",
    },
    "value": Object {
      "displayValue": "sexy",
      "value": "sexy",
      "valueFormat": 0,
    },
  },
  "records": Object {
    "nested-1-1": Array [
      PropertyRecord {
        "property": Object {
          "displayLabel": "nested 3",
          "name": "nested content field$nested 3",
          "typename": "datetime",
        },
        "value": Object {
          "displayValue": "",
          "value": undefined,
          "valueFormat": 0,
        },
      },
    ],
    "top-1": Array [
      PropertyRecord {
        "description": "bluetooth",
        "property": Object {
          "displayLabel": "nested 1",
          "name": "nested content field$nested 1",
          "typename": "text",
        },
        "value": Object {
          "displayValue": "bluetooth",
          "value": "invoice",
          "valueFormat": 0,
        },
      },
      PropertyRecord {
        "isReadonly": true,
        "property": Object {
          "displayLabel": "nested 2",
          "name": "nested content field$nested 2",
          "typename": "enum",
        },
        "value": Object {
          "displayValue": "",
          "value": undefined,
          "valueFormat": 0,
        },
      },
    ],
  },
  "reusePropertyDataState": true,
}
`;

exports[`PropertyDataProvider getData with nested categories nested content handling returns nested content with single nested record when there's only one record in category 1`] = `
Object {
  "categories": Array [
    Object {
      "childCategories": Array [],
      "expand": false,
      "label": "top-1",
      "name": "top-1",
      "parentCategory": undefined,
    },
    Object {
      "childCategories": Array [],
      "expand": false,
      "label": "nested-1-1",
      "name": "nested-1-1",
      "parentCategory": undefined,
    },
  ],
  "description": undefined,
  "label": PropertyRecord {
    "property": Object {
      "displayLabel": "Label",
      "name": "label",
      "typename": "string",
    },
    "value": Object {
      "displayValue": "Garden",
      "value": "Garden",
      "valueFormat": 0,
    },
  },
  "records": Object {
    "nested-1-1": Array [
      PropertyRecord {
        "property": Object {
          "displayLabel": "nested 3",
          "name": "nested content field$nested 3",
          "typename": "set",
        },
        "value": Object {
          "displayValue": "",
          "value": undefined,
          "valueFormat": 0,
        },
      },
    ],
    "top-1": Array [
      PropertyRecord {
        "description": "Computers Fresh leverage",
        "property": Object {
          "displayLabel": "nested 1",
          "name": "nested content field$nested 1",
          "typename": "tinyint",
        },
        "value": Object {
          "displayValue": "Computers Fresh leverage",
          "value": "Vermont",
          "valueFormat": 0,
        },
      },
      PropertyRecord {
        "isReadonly": true,
        "property": Object {
          "displayLabel": "nested 2",
          "editor": Object {
            "name": "International",
            "params": Array [],
          },
          "name": "nested content field$nested 2",
          "typename": "mediumint",
        },
        "value": Object {
          "displayValue": "",
          "value": undefined,
          "valueFormat": 0,
        },
      },
    ],
  },
  "reusePropertyDataState": true,
}
`;

exports[`PropertyDataProvider getData with nested categories nested content handling returns nothing for nested content with no values when there's only one record in category 1`] = `
Object {
  "categories": Array [],
  "description": undefined,
  "label": PropertyRecord {
    "property": Object {
      "displayLabel": "Label",
      "name": "label",
      "typename": "string",
    },
    "value": Object {
      "displayValue": "Landing Practical Concrete Car deposit",
      "value": "Landing Practical Concrete Car deposit",
      "valueFormat": 0,
    },
  },
  "records": Object {},
  "reusePropertyDataState": true,
}
`;

exports[`PropertyDataProvider getData with nested categories returns array property data 1`] = `
Object {
  "categories": Array [
    Object {
      "childCategories": Array [],
      "expand": false,
      "label": "program tan",
      "name": "Plastic",
      "parentCategory": undefined,
    },
  ],
  "description": "global IB",
  "label": PropertyRecord {
    "property": Object {
      "displayLabel": "Label",
      "name": "label",
      "typename": "string",
    },
    "value": Object {
      "displayValue": "alarm Saint Kitts and Nevis Concrete",
      "value": "alarm Saint Kitts and Nevis Concrete",
      "valueFormat": 0,
    },
  },
  "records": Object {
    "Plastic": Array [
      PropertyRecord {
        "description": undefined,
        "isReadonly": true,
        "property": Object {
          "displayLabel": "Data Developer",
          "name": "override",
          "typename": "Frozen",
        },
        "value": Object {
          "items": Array [
            PropertyRecord {
              "description": "some display value 1",
              "isReadonly": true,
              "property": Object {
                "displayLabel": "Data Developer",
                "name": "override",
                "typename": "timestamp",
              },
              "value": Object {
                "displayValue": "some display value 1",
                "value": "some value 1",
                "valueFormat": 0,
              },
            },
            PropertyRecord {
              "description": "some display value 2",
              "isReadonly": true,
              "property": Object {
                "displayLabel": "Data Developer",
                "name": "override",
                "typename": "timestamp",
              },
              "value": Object {
                "displayValue": "some display value 2",
                "value": "some value 2",
                "valueFormat": 0,
              },
            },
          ],
          "itemsTypeName": "timestamp",
          "valueFormat": 1,
        },
      },
    ],
  },
  "reusePropertyDataState": true,
}
`;

exports[`PropertyDataProvider getData with nested categories returns primitive property data 1`] = `
Object {
  "categories": Array [
    Object {
      "childCategories": Array [],
      "expand": false,
      "label": "Identity",
      "name": "index",
      "parentCategory": undefined,
    },
  ],
  "description": "Money Market Account",
  "label": PropertyRecord {
    "property": Object {
      "displayLabel": "Label",
      "name": "label",
      "typename": "string",
    },
    "value": Object {
      "displayValue": "front-end firewall Burgs",
      "value": "front-end firewall Burgs",
      "valueFormat": 0,
    },
  },
  "records": Object {
    "index": Array [
      PropertyRecord {
        "description": "Computer",
        "isReadonly": true,
        "property": Object {
          "displayLabel": "Soft",
          "editor": Object {
            "name": "quantifying",
            "params": Array [],
          },
          "name": "gold",
          "typename": "smallint",
        },
        "value": Object {
          "displayValue": "Computer",
          "value": "Colombian Peso Unidad de Valor Real",
          "valueFormat": 0,
        },
      },
    ],
  },
  "reusePropertyDataState": true,
}
`;

exports[`PropertyDataProvider getData with nested categories returns struct property data 1`] = `
Object {
  "categories": Array [
    Object {
      "childCategories": Array [],
      "expand": true,
      "label": "Towels Gorgeous Granite Keyboard",
      "name": "generate",
      "parentCategory": undefined,
    },
  ],
  "description": "B2C XML reintermediate",
  "label": PropertyRecord {
    "property": Object {
      "displayLabel": "Label",
      "name": "label",
      "typename": "string",
    },
    "value": Object {
      "displayValue": "Sausages",
      "value": "Sausages",
      "valueFormat": 0,
    },
  },
  "records": Object {
    "generate": Array [
      PropertyRecord {
        "description": undefined,
        "property": Object {
          "displayLabel": "Unbranded Metal Keyboard turquoise",
          "name": "Inverse",
          "typename": "Soft",
        },
        "value": Object {
          "members": Object {
            "Refined": PropertyRecord {
              "description": "some display value",
              "isReadonly": true,
              "property": Object {
                "displayLabel": "4th generation Chief",
                "name": "Refined",
                "typename": "boolean",
              },
              "value": Object {
                "displayValue": "some display value",
                "value": "some value",
                "valueFormat": 0,
              },
            },
          },
          "valueFormat": 2,
        },
      },
    ],
  },
  "reusePropertyDataState": true,
}
`;
