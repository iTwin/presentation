trigger:
  branches:
    include:
      - master

pr:
  drafts: false
  branches:
    include:
      - master

resources:
  repositories:
    - repository: itwinjs-core
      type: github
      endpoint: iModelJs
      name: iTwin/itwinjs-core
      ref: refs/heads/master

stages:
  - stage: Generate_Docs
    jobs:
      - job:
        displayName: Generate Docs
        workspace:
          clean: all

        steps:
          - checkout: self
            clean: true

          - task: NodeTool@0
            displayName: Use Node 18
            inputs:
              versionSpec: 18
              checkLatest: true

          - script: npm install -g pnpm@8.4.0
            displayName: Install pnpm

          - script: pnpm install
            displayName: Run 'pnpm install'

          - script: pnpm generate-docs
            displayName: Run 'pnpm generate-docs'
            env:
              RUSHSTACK_FILE_ERROR_BASE_FOLDER: $(Build.SourcesDirectory)

          - task: CopyFiles@2
            displayName: 'Copy generated docs to: $(Build.StagingDirectory)'
            inputs:
              SourceFolder: $(Build.SourcesDirectory)/build
              TargetFolder: $(Build.StagingDirectory)

          - task: PublishBuildArtifacts@1
            displayName: 'Publish Artifact: Presentation Docs'
            inputs:
              PathtoPublish: '$(Build.StagingDirectory)/docs/'
              ArtifactName: 'Presentation Docs'

  - stage: Validate_Docs
    dependsOn: Generate_Docs
    condition: and(succeeded(), in(variables['Build.Reason'], 'IndividualCI', 'PullRequest', 'Manual'))
    jobs:
      - template: common/config/azure-pipelines/jobs/docs-build.yaml@itwinjs-core
        parameters:
          checkout: itwinjs-core
          useCurrentPresentationDocsArtifact: true

  - stage: Tag_Docs
    dependsOn: Validate_Docs
    condition: and(succeeded(), in(variables['Build.Reason'], 'IndividualCI', 'Manual'))
    jobs:
      - job:
        displayName: Tag Docs
        steps:
          - task: tagBuildOrRelease@0
            displayName: Tag Docs
            inputs:
              type: "Build"
              tags: "hasDocs"
            condition: contains(variables['Build.SourceVersionMessage'], '[publish docs]')
